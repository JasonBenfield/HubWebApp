// Generated Code
namespace XTI_HubAppClient;
public sealed partial class InstallGroup : AppClientGroup
{
    public InstallGroup(IHttpClientFactory httpClientFactory, XtiTokenAccessor xtiTokenAccessor, AppClientUrl clientUrl, AppClientOptions options) : base(httpClientFactory, xtiTokenAccessor, clientUrl, options, "Install")
    {
        Actions = new InstallGroupActions(AddAdminUser: CreatePostAction<AddAdminUserRequest, AppUserModel>("AddAdminUser"), AddInstallationUser: CreatePostAction<AddInstallationUserRequest, AppUserModel>("AddInstallationUser"), AddOrUpdateApps: CreatePostAction<AddOrUpdateAppsRequest, AppModel[]>("AddOrUpdateApps"), AddOrUpdateVersions: CreatePostAction<AddOrUpdateVersionsRequest, EmptyActionResult>("AddOrUpdateVersions"), AddSystemUser: CreatePostAction<AddSystemUserRequest, AppUserModel>("AddSystemUser"), BeginInstallation: CreatePostAction<GetInstallationRequest, EmptyActionResult>("BeginInstallation"), ConfigureInstall: CreatePostAction<ConfigureInstallRequest, InstallConfigurationModel>("ConfigureInstall"), ConfigureInstallTemplate: CreatePostAction<ConfigureInstallTemplateRequest, InstallConfigurationTemplateModel>("ConfigureInstallTemplate"), DeleteInstallConfiguration: CreatePostAction<DeleteInstallConfigurationRequest, EmptyActionResult>("DeleteInstallConfiguration"), GetInstallConfigurations: CreatePostAction<GetInstallConfigurationsRequest, InstallConfigurationModel[]>("GetInstallConfigurations"), GetVersion: CreatePostAction<GetVersionRequest, XtiVersionModel>("GetVersion"), GetVersions: CreatePostAction<GetVersionsRequest, XtiVersionModel[]>("GetVersions"), Installed: CreatePostAction<GetInstallationRequest, EmptyActionResult>("Installed"), NewInstallation: CreatePostAction<NewInstallationRequest, NewInstallationResult>("NewInstallation"), RegisterApp: CreatePostAction<RegisterAppRequest, AppModel>("RegisterApp"), SetUserAccess: CreatePostAction<SetUserAccessRequest, EmptyActionResult>("SetUserAccess"));
    }

    public InstallGroupActions Actions { get; }

    public Task<AppUserModel> AddAdminUser(AddAdminUserRequest model, CancellationToken ct = default) => Actions.AddAdminUser.Post("", model, ct);
    public Task<AppUserModel> AddInstallationUser(AddInstallationUserRequest model, CancellationToken ct = default) => Actions.AddInstallationUser.Post("", model, ct);
    public Task<AppModel[]> AddOrUpdateApps(AddOrUpdateAppsRequest model, CancellationToken ct = default) => Actions.AddOrUpdateApps.Post("", model, ct);
    public Task<EmptyActionResult> AddOrUpdateVersions(AddOrUpdateVersionsRequest model, CancellationToken ct = default) => Actions.AddOrUpdateVersions.Post("", model, ct);
    public Task<AppUserModel> AddSystemUser(AddSystemUserRequest model, CancellationToken ct = default) => Actions.AddSystemUser.Post("", model, ct);
    public Task<EmptyActionResult> BeginInstallation(GetInstallationRequest model, CancellationToken ct = default) => Actions.BeginInstallation.Post("", model, ct);
    public Task<InstallConfigurationModel> ConfigureInstall(ConfigureInstallRequest model, CancellationToken ct = default) => Actions.ConfigureInstall.Post("", model, ct);
    public Task<InstallConfigurationTemplateModel> ConfigureInstallTemplate(ConfigureInstallTemplateRequest model, CancellationToken ct = default) => Actions.ConfigureInstallTemplate.Post("", model, ct);
    public Task<EmptyActionResult> DeleteInstallConfiguration(DeleteInstallConfigurationRequest model, CancellationToken ct = default) => Actions.DeleteInstallConfiguration.Post("", model, ct);
    public Task<InstallConfigurationModel[]> GetInstallConfigurations(GetInstallConfigurationsRequest model, CancellationToken ct = default) => Actions.GetInstallConfigurations.Post("", model, ct);
    public Task<XtiVersionModel> GetVersion(GetVersionRequest model, CancellationToken ct = default) => Actions.GetVersion.Post("", model, ct);
    public Task<XtiVersionModel[]> GetVersions(GetVersionsRequest model, CancellationToken ct = default) => Actions.GetVersions.Post("", model, ct);
    public Task<EmptyActionResult> Installed(GetInstallationRequest model, CancellationToken ct = default) => Actions.Installed.Post("", model, ct);
    public Task<NewInstallationResult> NewInstallation(NewInstallationRequest model, CancellationToken ct = default) => Actions.NewInstallation.Post("", model, ct);
    public Task<AppModel> RegisterApp(RegisterAppRequest model, CancellationToken ct = default) => Actions.RegisterApp.Post("", model, ct);
    public Task<EmptyActionResult> SetUserAccess(SetUserAccessRequest model, CancellationToken ct = default) => Actions.SetUserAccess.Post("", model, ct);
    public sealed record InstallGroupActions(AppClientPostAction<AddAdminUserRequest, AppUserModel> AddAdminUser, AppClientPostAction<AddInstallationUserRequest, AppUserModel> AddInstallationUser, AppClientPostAction<AddOrUpdateAppsRequest, AppModel[]> AddOrUpdateApps, AppClientPostAction<AddOrUpdateVersionsRequest, EmptyActionResult> AddOrUpdateVersions, AppClientPostAction<AddSystemUserRequest, AppUserModel> AddSystemUser, AppClientPostAction<GetInstallationRequest, EmptyActionResult> BeginInstallation, AppClientPostAction<ConfigureInstallRequest, InstallConfigurationModel> ConfigureInstall, AppClientPostAction<ConfigureInstallTemplateRequest, InstallConfigurationTemplateModel> ConfigureInstallTemplate, AppClientPostAction<DeleteInstallConfigurationRequest, EmptyActionResult> DeleteInstallConfiguration, AppClientPostAction<GetInstallConfigurationsRequest, InstallConfigurationModel[]> GetInstallConfigurations, AppClientPostAction<GetVersionRequest, XtiVersionModel> GetVersion, AppClientPostAction<GetVersionsRequest, XtiVersionModel[]> GetVersions, AppClientPostAction<GetInstallationRequest, EmptyActionResult> Installed, AppClientPostAction<NewInstallationRequest, NewInstallationResult> NewInstallation, AppClientPostAction<RegisterAppRequest, AppModel> RegisterApp, AppClientPostAction<SetUserAccessRequest, EmptyActionResult> SetUserAccess);
}